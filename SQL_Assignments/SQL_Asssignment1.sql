--3.
SELECT PP.ProductID,Name,RATING FROM Production.Product PP 
JOIN Production.ProductReview PPR ON PP.ProductID=PPR.ProductID 
WHERE RATING=(SELECT MAX(RATING) FROM Production.ProductReview);

SELECT PRODUCTID, NAME, RATING
FROM (SELECT P.PRODUCTID, NAME, RATING,
RANK() OVER(ORDER BY RATING DESC) AS rnk
FROM Production.Product AS P
INNER JOIN Production.ProductReview AS PR ON P.ProductID = PR.ProductID
) AS ranked
WHERE rnk = 1;


--4.
SELECT SOH.CUSTOMERID,POH.ORDERDATE,MAX(POH.TOTALDUE) AS HEIGHEST_AMOUNT
FROM Sales.SalesOrderHeader AS SOH
INNER JOIN Purchasing.PurchaseOrderHeader AS POH
ON SOH.OrderDate=POH.OrderDate
GROUP BY CustomerID,POH.OrderDate
ORDER BY CustomerID;

SELECT CUSTOMERID,ORDERDATE, HEIGHEST_AMOUNT
FROM (
SELECT SOH.CUSTOMERID,P.ORDERDATE,P.TOTALDUE AS HEIGHEST_AMOUNT,
 ROW_NUMBER() OVER(PARTITION BY CUSTOMERID,P.ORDERDATE ORDER BY P.TOTALDUE DESC) AS r_num
FROM Sales.SalesOrderHeader AS SOH
INNER JOIN Purchasing.PurchaseOrderHeader AS P 
ON SOH.OrderDate=P.OrderDate) AS T
WHERE r_num=1;

--5
SELECT EmployeeID,FullName,MaxTotalDue,OrderDate,VendorID,row_num
FROM (SELECT PHO.EmployeeID,CONCAT(p.FirstName, ' ', p.MiddleName, ' ', p.LastName) AS FullName,
PHO.TotalDue AS MaxTotalDue,PHO.OrderDate,PHO.VendorID,
ROW_NUMBER() OVER (PARTITION BY PHO.EmployeeID ORDER BY PHO.TotalDue DESC) AS row_num
FROM Person.Person AS p
JOIN Purchasing.PurchaseOrderHeader AS PHO ON p.BusinessEntityID = PHO.EmployeeID
) AS sub
WHERE row_num = 1
ORDER BY MaxTotalDue DESC;


CREATE PROCEDURE GETTOTALQUANTITY3
@PID INT OUTPUT
AS
BEGIN
SELECT @PID=SUM(QUANTITY) FROM Production.ProductInventory WHERE ProductID=1
END;

DECLARE @TOTALQUANTITY INT;
EXEC GETTOTALQUANTITY3 @PID=@TOTALQUANTITY OUTPUT
SELECT @TOTALQUANTITY AS TOTAL;

